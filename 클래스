Car.class

public class Car{
    String company = "hyundai car";
    String model;
    String color;
    int maxSpeed;

    Car(){}

    Car(String model){
        this(model, "silver", 250);
    }
    Car(String model, String color){
        this(model, color, 240);
    }
    Car(String model, String color, int maxSpeed){
        this.model = model;
        this.color = color;
        this.maxSpeed = maxSpeed;
    }
}


CarExample.java


public  class CarExample {
    public static void main(String[] args){
        Car car1 = new Car();

        System.out.println("car1.company : " + car1.company);
        System.out.println();

        Car car2 = new Car("자가용");
        System.out.println("car2.company : " + car2.company);
        System.out.println("car2.model : " + car2.model);
        System.out.println();

        Car car3 = new Car("자가용", "빨강");
        System.out.println("car3.company : " + car3.company);
        System.out.println("car3.model : " + car3.model);
        System.out.println("car3.color : " + car3.color);
        System.out.println();

        Car car4 = new Car("회사용", "파랑", 330);
        System.out.println("car4.company : " + car4.company);
        System.out.println("car4.model : " + car4.model);
        System.out.println("car4.color : " + car4.color);
        System.out.println("car4.maxSpeed : " + car4.maxSpeed);
    }
}




car1.company : hyundai car

car2.company : hyundai car
car2.model : 자가용

car3.company : hyundai car
car3.model : 자가용
car3.color : 빨강

car4.company : hyundai car
car4.model : 회사용
car4.color : 파랑
car4.maxSpeed : 330


// 자신의 다른 생성자 호출. this(매개변수, .... , 값);




-----------------------------------------------------------------------------------
Computer.class

public class Computer {
    int sum1(int[] values){
        int sum = 0;
        for(int i = 0; i<values.length; i++){
            sum += values[i];
        }
        return sum;
    }
    int sum2(int ... values){
        int sum = 0;
        for(int i = 0; i<values.length; i++){
            sum += values[i];
        }
        return sum;
    }
}

ComputerExample.java

public class ComputerExample {
    public static void main(String[] args){
        Computer myCom = new Computer();

        int[] values1 = { 1, 2, 3};
        int result1 = myCom.sum1(values1);
        System.out.println("result1 : " + result1);

        int result2 = myCom.sum1(new int[] { 1, 2, 3, 4, 5});
        System.out.println("result2 : " + result2);

        int result3 = myCom.sum2( 1, 2, 3 );
        System.out.println("result3 : " + result3);

        int result4 = myCom.sum2(1, 2, 3, 4, 5);
        System.out.println("result4 : " + result4);
    }
}

result1 : 6
result2 : 15
result3 : 6
result4 : 15

// 매개변수의 개수를 모를 때 사용. 매개 변수를 배열로 선언한 sum1과 ...로 선언한 sum2.

-----------------------------------------------------------------------------
Gas.class

public class Gas {
    int gas;

    void setGas(int gas){ // 리턴값이 없는 메소드. 매개 값을 받아서 gas 필드 값을 변경.
        this.gas = gas;
    }

    boolean isLeftGas(){ // gas 필드 값이 0이면 false, 0이 아니면 true 리턴.
        if(gas == 0){
            System.out.println("no more gas...");
            return false;
        }
        else{
            System.out.println("many gas!!");
            return true;
        }
    }

    void run(){ // 리턴 값이 없는 메소드. gas 필드 값이 0이면 return문으로 메소드 강제 종료.
        while(true){
            if(gas>0){
                System.out.println("running. (gas : " + gas + ")");
                gas -= 1;
            }
            else{
                System.out.println("stop. (gas : " + gas + ")");
                return; // 메소드 종료
            }
        }
    }
}

GasExample.java

public class GasExample {
    public static void main(String[] args){
        Gas myGas = new Gas();

        myGas.setGas(5); // Car의 setGas() 메소드 호출.

        boolean gasState = myGas.isLeftGas(); // Car의 isLeftGas() 메소드 호출.

        if(gasState){
            System.out.println("let's go!");
            myGas.run(); // Car의 run() 메소드 호출.
        }
        if(myGas.isLeftGas()){ // Car의 isLeftGas() 메소드 호출.
            System.out.println("gas를 주입할 필요 없음.");
        }
        else {
                System.out.println("gas를 주입하세요.");
        }
    }
}

many gas!!
let's go!
running. (gas : 5)
running. (gas : 4)
running. (gas : 3)
running. (gas : 2)
running. (gas : 1)
stop. (gas : 0)
no more gas...
gas를 주입하세요.
