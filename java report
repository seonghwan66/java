import java.util.Scanner;

public class MonthSchedule {
    Scanner sc = new Scanner(System.in);
    Day[] day;

    public MonthSchedule(int date) {
        day = new Day[date];
        for (int i = 0; i < date; i++) {
            day[i] = new Day();
        }
    }

    public void input() {
        System.out.print("날짜(1~30)?");
        int date = sc.nextInt();
        if(date<1 || date>30){
            System.out.println("날짜를 잘못 입력하셨습니다.");
            return;
        }
        System.out.print("할일(빈칸없이입력)?");
        String todo = sc.next();
        day[date - 1].set(todo);
    }

    public void view() {
        System.out.print("날짜(1~30)?");
        int date = sc.nextInt();
        if(date<1 || date>30){
            System.out.println("날짜를 잘못 입력하셨습니다.");
            return;
        }
        System.out.print(date + "일의 할 일은 ");
        day[date - 1].show();
    }

    public void finish() {
        System.out.println("프로그램을 종료합니다.");
        System.exit(0);
    }
    public void see(){
        System.out.println("이번달 스케줄 달력");
        for (int i = 1; i <= 5; i++) {
            System.out.println(i + "째주 스케줄");

            int startDay = (i - 1) * 7;
            int endDay = i * 7;

            if (i == 5) {
                endDay = 30;
            }
            for (int j = startDay; j < endDay; j++) {
                System.out.print("|" + (j+1) + "일");
                if(day[j]==null) {
                    System.out.print(" X\t\t");
                } else {
                    System.out.print(" " + day[j].get() + "\t\t");
                }
            }
            System.out.println();
        }
    }
    public void run() {
        while (true) {
            System.out.print("할일(입력:1, 보기:2, 전체 보기:3 끝내기:4) >>");
            int number = sc.nextInt();
            switch (number) {
                case 1:
                    input();
                    break;
                case 2:
                    view();
                    break;
                case 3:
                    see();
                    break;
                case 4:
                    finish();
                    break;
            }
        }
    }
    public static void main(String[] args) {
        MonthSchedule september = new MonthSchedule(30);
        september.run();
    }
}
class Day {
    private String work = "X";
    public void set(String work) { this.work = work; }
    public String get() { return work; }
    public void show() {
        if (work.equals("X")) System.out.println("없습니다.");
        else System.out.println(work + "입니다.");
    }
}
----------------------------------------------------------------------------------------------------------------------------------
import java.util.Scanner;

public class CallerExample {
    public static void main(String[] args){
        Callee callee = new Callee();

        Callee.CallBack callBack = new Callee.CallBack() {
            @Override
            public void onInputOne(Callee callee) {
                System.out.println("Caller : Input from Calle " + callee.getNum());
                System.out.println("callee's num : " + callee.getNum());
            }

            @Override
            public void onInputTwo(Callee callee) {
                System.out.println("Caller : Input from Calle " + callee.getNum());
                System.out.println("callee's num : " + callee.getNum());
            }
        };

        callee.setCallBack(callBack);
        callee.execute();
    }
}

class Callee{
    public interface CallBack{
        public void onInputOne(Callee callee);
        public void onInputTwo(Callee callee);
    }
    private Integer num;
    private CallBack callback;

    public Callee(){
        this.num = 0;
        this.callback = null;
    }

    public void setCallBack(CallBack callback){
        this.callback = callback;
    }

    public Integer getNum(){
        return this.num;
    }

    /*public void execute(){
        Scanner sc = new Scanner(System.in);

        System.out.println("1과 2 중 하나를 입력하세요.");
        num = sc.nextInt();
        if(num != 1 && num !=2){
            System.out.println("1과 2 중 하나를 입력하세요.");
        }

        if(this.num != null){

        }
    }*/
    public void execute() {
        Scanner sc = new Scanner(System.in);

        System.out.println("1과 2 중 하나를 입력하세요.");
        num = sc.nextInt();

        if (callback != null) {
            if (num == 1) {
                callback.onInputOne(this);
            } else if (num == 2) {
                callback.onInputTwo(this);
            }
        }
    }
}
----------------------------------------------------------------------------------------------------------------------------------
import java.util.Scanner;
public class CallerExample {
    public static void main(String[] args){
        Callee callee = new Callee();

        callee.setCallBack(new Callee.CallBack() {
            @Override
            public void onInputOne(Callee callee) {
                System.out.println("Caller : Input from Callee 1");
                System.out.println("callee's num : " + callee.getNum());
            }
            @Override
            public void onInputTwo(Callee callee) {
                System.out.println("Caller : Input from Callee 2");
                System.out.println("callee's num : " + callee.getNum());
            }
        });
        callee.execute();
    }
}
class Callee{
    public interface CallBack{
        public void onInputOne(Callee callee);
        public void onInputTwo(Callee callee);
    }
    private Integer num;
    private CallBack callback;
    public Callee(){
        this.num = 0;
        this.callback = null;
    }
    public void setCallBack(CallBack callback){
        this.callback = callback;
    }
    public Integer getNum(){
        return this.num;
    }
    public void execute() {
        Scanner sc = new Scanner(System.in);

        System.out.println("1과 2 중 하나를 입력하세요.");
        num = sc.nextInt();

        if (callback != null) {
            if (num == 1) {
                callback.onInputOne(this);
            } else if (num == 2) {
                callback.onInputTwo(this);
            } else if (num != 1 & num != 2){
                execute();
            }
        }
    }
}

----------------------------------------------------------------------------------------------------------------------------------
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;

public class MovingButton extends JFrame {
    int x, y, counter = 0;

    // MovingButton 클래스 생성자
    public MovingButton() {
        setSize(1000, 700);     // 프레임 크기 설정
        setTitle("Moving Button"); // 프레임 제목 설정
        setLayout(null);         // 배치 관리자를 사용하지 않도록 설정

        // 각 패널 생성 및 설정
        JPanel TLPanel = createPanel(Color.YELLOW, 0, 0, 500, 350);
        JPanel TRPanel = createPanel(Color.BLACK, 500, 0, 500, 350);
        JPanel LLPanel = createPanel(Color.GRAY, 0, 350, 500, 350);
        JPanel LRPanel = createPanel(Color.YELLOW, 500, 350, 500, 350);

        // 버튼 생성 및 설정
        JButton button = new JButton("Moving Button");
        button.setSize(100, 50);
        
        // 버튼에 MouseListener 및 MouseMotionListener 추가
        button.addMouseListener(new MouseAdapter() {
            public void mousePressed(MouseEvent e) {
                x = e.getX();  // 마우스 클릭 시의 x 좌표 저장
                y = e.getY();  // 마우스 클릭 시의 y 좌표 저장
                System.out.println(button.getText()); // 콘솔에 버튼의 텍스트 출력
            }
        });
        button.addMouseMotionListener(new MouseAdapter() {
            int xx, yy = 0;

            public void mouseDragged(MouseEvent e) {
                xx = button.getX() + e.getX() - x;
                yy = button.getY() + e.getY() - y;

                // 버튼 위치 설정 및 영역 판별
                button.setLocation(xx, yy);
                if (xx >= 500 && yy < 350 && xx < 1000 && yy >= 0) {
                    button.setText("Top Right");
                } else if (xx < 500 && yy >= 350 && xx >= 0 && yy < 700) {
                    button.setText("Low Left");
                } else if (xx >= 500 && yy >= 350 && xx < 1000 && yy < 700) {
                    button.setText("Low Right");
                } else if (xx < 500 && yy < 350 && xx >= 0 && yy >= 0) {
                    button.setText("Top Left");
                } else {
                    button.setText("Out Of Bounds");
                }
            }
        });
        add(button);
        add(TLPanel);
        add(TRPanel);
        add(LLPanel);
        add(LRPanel);

        setVisible(true);       // 프레임을 화면에 표시
        setDefaultCloseOperation(EXIT_ON_CLOSE);  // 닫기 버튼 설정
    }
    // 패널을 생성하고 색상, 위치, 크기를 설정하는 메서드
    private JPanel createPanel(Color color, int x, int y, int width, int height) {
        JPanel panel = new JPanel();
        panel.setBackground(color);
        panel.setBounds(x, y, width, height);
        panel.setLayout(null);
        return panel;
    }
    // 메인 메서드
    public static void main(String[] args) {
        new MovingButton(); // MovingButton 객체 생성
    }
}
