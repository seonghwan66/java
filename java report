import java.util.Scanner;

public class MonthSchedule {
    Scanner sc = new Scanner(System.in);
    Day[] day;

    public MonthSchedule(int date) {
        day = new Day[date];
        for (int i = 0; i < date; i++) {
            day[i] = new Day();
        }
    }

    public void input() {
        System.out.print("날짜(1~30)?");
        int date = sc.nextInt();
        if(date<1 || date>30){
            System.out.println("날짜를 잘못 입력하셨습니다.");
            return;
        }
        System.out.print("할일(빈칸없이입력)?");
        String todo = sc.next();
        day[date - 1].set(todo);
    }

    public void view() {
        System.out.print("날짜(1~30)?");
        int date = sc.nextInt();
        if(date<1 || date>30){
            System.out.println("날짜를 잘못 입력하셨습니다.");
            return;
        }
        System.out.print(date + "일의 할 일은 ");
        day[date - 1].show();
    }

    public void finish() {
        System.out.println("프로그램을 종료합니다.");
        System.exit(0);
    }
    public void see(){
        System.out.println("이번달 스케줄 달력");
        for (int i = 1; i <= 5; i++) {
            System.out.println(i + "째주 스케줄");

            int startDay = (i - 1) * 7;
            int endDay = i * 7;

            if (i == 5) {
                endDay = 30;
            }
            for (int j = startDay; j < endDay; j++) {
                System.out.print("|" + (j+1) + "일");
                if(day[j]==null) {
                    System.out.print(" X\t\t");
                } else {
                    System.out.print(" " + day[j].get() + "\t\t");
                }
            }
            System.out.println();
        }
    }
    public void run() {
        while (true) {
            System.out.print("할일(입력:1, 보기:2, 전체 보기:3 끝내기:4) >>");
            int number = sc.nextInt();
            switch (number) {
                case 1:
                    input();
                    break;
                case 2:
                    view();
                    break;
                case 3:
                    see();
                    break;
                case 4:
                    finish();
                    break;
            }
        }
    }
    public static void main(String[] args) {
        MonthSchedule september = new MonthSchedule(30);
        september.run();
    }
}
class Day {
    private String work = "X";
    public void set(String work) { this.work = work; }
    public String get() { return work; }
    public void show() {
        if (work.equals("X")) System.out.println("없습니다.");
        else System.out.println(work + "입니다.");
    }
}
----------------------------------------------------------------------------------------------------------------------------------
import java.util.Scanner;

public class CallerExample {
    public static void main(String[] args){
        Callee callee = new Callee();

        Callee.CallBack callBack = new Callee.CallBack() {
            @Override
            public void onInputOne(Callee callee) {
                System.out.println("Caller : Input from Calle " + callee.getNum());
                System.out.println("callee's num : " + callee.getNum());
            }

            @Override
            public void onInputTwo(Callee callee) {
                System.out.println("Caller : Input from Calle " + callee.getNum());
                System.out.println("callee's num : " + callee.getNum());
            }
        };

        callee.setCallBack(callBack);
        callee.execute();
    }
}

class Callee{
    public interface CallBack{
        public void onInputOne(Callee callee);
        public void onInputTwo(Callee callee);
    }
    private Integer num;
    private CallBack callback;

    public Callee(){
        this.num = 0;
        this.callback = null;
    }

    public void setCallBack(CallBack callback){
        this.callback = callback;
    }

    public Integer getNum(){
        return this.num;
    }

    /*public void execute(){
        Scanner sc = new Scanner(System.in);

        System.out.println("1과 2 중 하나를 입력하세요.");
        num = sc.nextInt();
        if(num != 1 && num !=2){
            System.out.println("1과 2 중 하나를 입력하세요.");
        }

        if(this.num != null){

        }
    }*/
    public void execute() {
        Scanner sc = new Scanner(System.in);

        System.out.println("1과 2 중 하나를 입력하세요.");
        num = sc.nextInt();

        if (callback != null) {
            if (num == 1) {
                callback.onInputOne(this);
            } else if (num == 2) {
                callback.onInputTwo(this);
            }
        }
    }
}
----------------------------------------------------------------------------------------------------------------------------------
import java.util.Scanner;
public class CallerExample {
    public static void main(String[] args){
        Callee callee = new Callee();

        callee.setCallBack(new Callee.CallBack() {
            @Override
            public void onInputOne(Callee callee) {
                System.out.println("Caller : Input from Callee 1");
                System.out.println("callee's num : " + callee.getNum());
            }
            @Override
            public void onInputTwo(Callee callee) {
                System.out.println("Caller : Input from Callee 2");
                System.out.println("callee's num : " + callee.getNum());
            }
        });
        callee.execute();
    }
}
class Callee{
    public interface CallBack{
        public void onInputOne(Callee callee);
        public void onInputTwo(Callee callee);
    }
    private Integer num;
    private CallBack callback;
    public Callee(){
        this.num = 0;
        this.callback = null;
    }
    public void setCallBack(CallBack callback){
        this.callback = callback;
    }
    public Integer getNum(){
        return this.num;
    }
    public void execute() {
        Scanner sc = new Scanner(System.in);

        System.out.println("1과 2 중 하나를 입력하세요.");
        num = sc.nextInt();

        if (callback != null) {
            if (num == 1) {
                callback.onInputOne(this);
            } else if (num == 2) {
                callback.onInputTwo(this);
            } else if (num != 1 & num != 2){
                execute();
            }
        }
    }
}

----------------------------------------------------------------------------------------------------------------------------------
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
public class PanelButtonMovement extends JFrame{
    int xP, yP, counter = 0;
    public PanelButtonMovement() {
        setSize(1000,700);
        setTitle("Moving Button");
        setLayout(null);

        JPanel firstPanel = new JPanel();
        firstPanel.setBackground(Color.YELLOW);
        firstPanel.setBounds(0, 0, 500, 350);
        firstPanel.setLayout(null);

        JPanel secondPanel = new JPanel();
        secondPanel.setBackground(Color.BLACK);
        secondPanel.setBounds(500, 0, 500, 350);
        secondPanel.setLayout(null);

        JPanel thirdPanel = new JPanel();
        thirdPanel.setBackground(Color.GRAY);
        thirdPanel.setBounds(0, 350, 500, 350);
        thirdPanel.setLayout(null);

        JPanel fourthPanel = new JPanel();
        fourthPanel.setBackground(Color.YELLOW);
        fourthPanel.setBounds(500, 350, 500, 350);
        fourthPanel.setLayout(null);

        JButton button = new JButton("Start");
        button.setSize(100,50);
        button.addMouseListener(new MouseAdapter() {
            public void mousePressed(MouseEvent e) {
                xP = e.getX();  yP = e.getY();
                System.out.println(button.getText());
            }
        });
        button.addMouseMotionListener(new MouseAdapter() {
            int xPd, yPd= 0;
            public void mouseDragged(MouseEvent e) {
                xPd = button.getX() + e.getX() - xP;
                yPd = button.getY() + e.getY() - yP;
                button.setLocation(xPd, yPd);
                if(xPd >= 500 && yPd < 350 && xPd < 1000 && yPd >= 0) {
                    button.setText("Top Right");
                }
                else if(xPd < 500 && yPd >= 350 && xPd >= 0 && yPd < 700) {
                    button.setText("Low Left");
                }
                else if(xPd >= 500 && yPd >= 350 && xPd < 1000 && yPd < 700) {
                    button.setText("Low Right");
                }
                else if(xPd < 500 && yPd < 350 && xPd >= 0 && yPd >= 0){
                    button.setText("Top Left");
                }
                else {
                    button.setText("OutOfBounds!");
                }
            }
        });
        add(button);
        add(firstPanel);
        add(secondPanel);
        add(thirdPanel);
        add(fourthPanel);

        setVisible(true);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
    }
    public static void main(String[] args) {
        new PanelButtonMovement();
    }
}
